{"version":3,"sources":["iris.js"],"names":["tf","trainingData","tensor2d","iris","map","item","sepal_length","sepal_width","petal_length","petal_width","outputData","species","testingData","irisTesting","model","sequential","add","layers","dense","inputShape","activation","units","compile","loss","optimizer","train","adam","startTime","Date","now","fit","epochs","then","history","predict","print"],"mappingseAAeD,GAAGE,QAAH,CAAYC,eAAKC,GAAL,CAASC,QAAQ,CAChDA,KAAKC,YAD2C,EAC7BD,KAAKE,WADwB,EACXF,KAAKG,YADM,EACQH,KAAKI,WADb,CAAjB,CAAZ,CAArB;;AAIA;AACA,MAAMC,aAAaV,GAAGE,QAAH,CAAYC,eAAKC,GAAL,CAASC,QAAQ,CAC9CA,KAAKM,OAAL,KAAiB,QAAjB,GAA4B,CAA5B,GAAgC,CADc,EAE9CN,KAAKM,OAAL,KAAiB,WAAjB,GAA+B,CAA/B,GAAmC,CAFW,EAG9CN,KAAKM,OAAL,KAAiB,YAAjB,GAAgC,CAAhC,GAAoC,CAHU,CAAjB,CAAZ,CAAnB;;AAMA,MAAMC,cAAcZ,GAAGE,QAAH,CAAYW,sBAAYT,GAAZ,CAAgBC,QAAQ,CACtDA,KAAKC,YADiD,EACnCD,KAAKE,WAD8B,EACjBF,KAAKG,YADY,EACEH,KAAKI,WADP,CAAxB,CAAZ,CAApB;;AAIA;AACA,MAAMK,QAAQd,GAAGe,UAAH,EAAd;;AAEA;AACAD,MAAME,GAAN,CAAUhB,GAAGiB,MAAH,CAAUC,KAAV,CAAgB;AACxBC,cAAY,CAAC,CAAD,CADY;AAExBC,cAAY,SAFY;AAGxBC,SAAO;AAHiB,CAAhB,CAAV;;AAMA;AACAP,MAAME,GAAN,CAAUhB,GAAGiB,MAAH,CAAUC,KAAV,CAAgB;AACxBC,cAAY,CAAC,CAAD,CADY;AAExBC,cAAY,SAFY;AAGxBC,SAAO;AAHiB,CAAhB,CAAV;;AAMA;AACAP,MAAME,GAAN,CAAUhB,GAAGiB,MAAH,CAAUC,KAAV,CAAgB;AACxBE,cAAY,SADY;AAExBC,SAAO;AAFiB,CAAhB,CAAV;;AAKAP,MAAMQ,OAAN,CAAc;AACZC,QAAM,kBADM;AAEZC,aAAWxB,GAAGyB,KAAH,CAASC,IAAT,CAAc,GAAd;AAFC,CAAd;;AAKA;AACA,MAAMC,YAAYC,KAAKC,GAAL,EAAlB;AACAf,MAAMgB,GAAN,CAAU7B,YAAV,EAAwBS,UAAxB,EAAoC,EAACqB,QAAQ,GAAT,EAApC,EACGC,IADH,CACSC,OAAD,IAAa;AACjB;AACAnB,QAAMoB,OAAN,CAActB,WAAd,EAA2BuB,KAA3B;AACD,CAJH","file":"iris.map","sourceRoot":"..","sourcesContent":["import * as tf from \"@tensorflow/tfjs\"\nimport \"@tensorflow/tfjs-node\"\nimport iris from './iris.json'\nimport irisTesting from './iris-testing.json'\n\n// convert/setup our data\nconst trainingData = tf.tensor2d(iris.map(item => [\n  item.sepal_length, item.sepal_width, item.petal_length, item.petal_width\n]))\n\n// [0-1, 0-1, 0-1]\nconst outputData = tf.tensor2d(iris.map(item => [\n  item.species === 'setosa' ? 1 : 0,\n  item.species === 'virginica' ? 1 : 0,\n  item.species === 'versicolor' ? 1 : 0\n]))\n\nconst testingData = tf.tensor2d(irisTesting.map(item => [\n  item.sepal_length, item.sepal_width, item.petal_length, item.petal_width\n]))\n\n// build neural network\nconst model = tf.sequential()\n\n// input layer\nmodel.add(tf.layers.dense({\n  inputShape: [4],\n  activation: 'sigmoid',\n  units: 5\n}))\n\n// hidden layer\nmodel.add(tf.layers.dense({\n  inputShape: [5],\n  activation: 'sigmoid',\n  units: 3\n}))\n\n// output layer\nmodel.add(tf.layers.dense({\n  activation: 'sigmoid',\n  units: 3\n}))\n\nmodel.compile({\n  loss: 'meanSquaredError',\n  optimizer: tf.train.adam(.06)\n})\n\n// train/fit our network\nconst startTime = Date.now()\nmodel.fit(trainingData, outputData, {epochs: 100})\n  .then((history) => {\n    // console.log(history)\n    model.predict(testingData).print()\n  })\n"]}